One of Typescript's core principle is that type checking focuses on the shape that values have. This is sometimes called "Duck Typing" or "Structural Typing";

interface Point {
  x: number;
  y: number;
}

function logPoint(p: Point) {
  console.log(`${p.x}, ${p.y}`);
}

const point = {x: 1, y: 2};
logPoint(point); // 1, 2

const point1 = {x: 3, y: 4, z: 5};
logPoint(point1); // 3, 4, 5

const color = {hex: "#f5f5f5"};
logPoint(color); // undefined (It will error message "Argument is not assignable to parameter of 'Point' ");
